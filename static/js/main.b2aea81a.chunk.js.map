{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","adder","word","setState","prevState","this","AnyGoodSelected","length","className","join","type","onClick","map","good","isSelected","includes","classNames","selected","nonSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,MAAQ,SAACC,GACP,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,4CAG5E,WAA2B,IAAD,OAChBF,EAAkBK,KAAKN,MAAvBC,cACFM,EAAsD,IAApCD,KAAKN,MAAMC,cAAcO,OAEjD,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,2BAEG,IACAR,EAAcS,KAAK,MACnB,IACAH,EACC,gDAEG,IACD,wBACEI,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAEH,cAAe,MAHnC,kBAUF,4DAKJ,oBAAIQ,UAAU,OAAd,SACGX,EAAgBe,KAAI,SAACC,GACpB,IAAMC,EAAa,EAAKf,MAAMC,cAAce,SAASF,GAErD,OACE,qBAEEL,UAAWQ,IAAW,CACpBC,SAAUH,EACVI,aAAcJ,IAJlB,UAOGD,EACA,KACCC,GACA,wBACEJ,KAAK,SACLC,QAAS,WACP,EAAKV,MAAMY,IAHf,sBATGA,e,GA7CHM,IAAMC,WAwETtB,IC1FfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2aea81a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  adder = (word: string) => {\n    this.setState(prevState => ({ selectedGoods: [...prevState.selectedGoods, word] }));\n  };\n\n  render(): React.ReactNode {\n    const { selectedGoods } = this.state;\n    const AnyGoodSelected = this.state.selectedGoods.length !== 0;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          Selected good:\n          {' '}\n          {selectedGoods.join(', ')}\n          {' '}\n          {AnyGoodSelected ? (\n            <>\n              selected\n              {' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ selectedGoods: [] });\n                }}\n              >\n                X\n              </button>\n            </>\n          ) : (\n            <>\n              No any selections\n            </>\n          )}\n        </h1>\n        <ul className=\"list\">\n          {goodsFromServer.map((good) => {\n            const isSelected = this.state.selectedGoods.includes(good);\n\n            return (\n              <li\n                key={good}\n                className={classNames({\n                  selected: isSelected,\n                  nonSelected: !isSelected,\n                })}\n              >\n                {good}\n                {' '}\n                {!isSelected && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.adder(good);\n                    }}\n                  >\n                    select\n                  </button>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}